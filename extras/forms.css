/*
*
* FORMS
*
* Style forms, form rows, and various inputs. Attributes that are often
* changed (eg colour, typography) are defined via variables to make for easy
* overriding in custom CSS.
*
* Bare HTML elements are styled, but some classnames are used to handle edge
* cases or where no unique HTML element exists.
*
* Current limitations:
*   - Only styling text inputs, textarea, radio, checkbox, fieldset, label. No
*     file upload, select, etc for now.
*   - No styling for error states (eg red border)
*   - No handling of `indeterminate` state of checkboxes
*   - Forms are 100% width. Set any required width on the parent.
*   - No responsive handling
*   - Form groups flow vertically in columns with labels above the inputs.
*     Handle other alignments (eg inline, horizontal) elsewhere.
*
*/

/* VARIABLES */
:root {
  --form-group-padding: var(--space-s) 0;

  --input-font-family: inherit;
  --input-font-size: var(--font-size-default);
  --input-color: var(--color-text-default);
  --input-color-placeholder: var(--color-text-muted);
  --input-background-color: var(--color-background-primary);
  --input-padding: var(--space-2xs);
  --input-border-width: 1px;
  --input-border-radius: 4px;

  --radiocheck-highlight-color: var(--color-text-default);

  --label-font-family: inherit;
  --label-font-size: var(--font-size--1);
  --label-color: var(--color-text-default);

  --hint-text-font-family: inherit;
  --hint-text-font-size: var(--font-size--2);
  --hint-text-color: var(--color-text-muted);
}

@media (prefers-color-scheme: light) {
  :root {
    --input-border-color: var(--gray-600);
    --input-border-color-focus: var(--gray-900);
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --input-border-color: var(--gray-400);
    --input-border-color-focus: var(--gray-300);
  }
}

/* --- STYLES --- */
/* Form */
form {
  display: flex;
  flex-flow: column;
}

/* Form group */
.u-form-group {
  padding: var(--form-group-padding);
  display: flex;
  flex-flow: wrap;
  gap: var(--space-3xs);
}

/* Label */
form label {
  font-family: var(--label-font-family);
  font-size: var(--label-font-size);
  color: var(--label-color);
  line-height: var(--line-height-none);
  display: flex;
  align-items: center;
  gap: 0.5em;
}

.u-form-label--checkbox {
  font-size: var(--input-font-size);
  color: var(--input-color);
}

.u-form-label--disabled {
  /* Apply on <label> when label wraps the <input>, as in radio/checkbox */
  opacity: 0.4;
  cursor: not-allowed;
}

/* Fieldset, legend */
fieldset {
  border: var(--input-border-width) solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  margin: 0;
  padding: var(--space-xs) var(--space-s) var(--space-s);
}

fieldset label:not(:last-child) {
  margin-bottom: var(--space-xs);
}

legend {
  padding: 0 0.5em;
}

/* Text input, Textarea */
input,
textarea {
  border-radius: var(--input-border-radius);
  background-color: var(--input-background-color);
  color: var(--input-color);
  width: 100%;
  display: flex;
  font-family: var(--input-font-family);
  font-size: var(--input-font-size);
  line-height: var(--line-height-s);
  padding: var(--input-padding);
  border: var(--input-border-width) solid var(--input-border-color);
}

input::placeholder {
  color: var(--input-color-placeholder);
  font-style: italic;
}

input:focus,
textarea:focus {
  outline: calc(var(--input-border-width) + 1px) solid
    var(--input-border-color-focus);
  outline-offset: calc(-1 * var(--input-border-width));
}

input[disabled] {
  opacity: 0.4;
  cursor: not-allowed;
}
.u-form-label--disabled input[disabled] {
  opacity: 1; /* don't nest reduced opacity */
}

/* Radio button, Checkbox */
input[type="radio"],
input[type="checkbox"] {
  appearance: none;
  background: var(--input-background-color); /* needed for iOS */
  border: var(--input-border-width) solid var(--input-border-color);
  height: 1em;
  width: 1em;
  display: inline-block;
  border-radius: 100%;
  vertical-align: text-bottom;
  position: relative;
  margin: 0;
}

input[type="radio"]::before,
input[type="checkbox"]::before {
  content: "";
  position: absolute;
  margin: auto;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  top: 0;
}

input[type="radio"]::focus,
input[type="checkbox"]::focus {
  outline: 2px solid;
  outline-offset: 2px;
}

input[type="checkbox"] {
  border-radius: var(--input-border-radius);
}

input[type="checkbox"]:checked {
  background-color: var(--radiocheck-highlight-color);
}

input[type="radio"]::before {
  height: 0;
  width: 0;
}

input[type="radio"]:checked::before {
  border: 0.33em solid transparent;
  border-radius: 100%;
  outline-offset: -0.33em;
  background: var(--radiocheck-highlight-color);
}

input[type="checkbox"]:checked::before {
  border-right: 3px solid var(--input-background-color);
  border-bottom: 3px solid var(--input-background-color);
  height: 50%;
  width: 25%;
  transform: rotate(45deg) translateY(-10%) translateX(-10%);
}

/* Hint text */
.u-form-hint-text {
  font-family: var(--hint-text-font-family);
  font-size: var(--hint-text-font-size);
  color: var(--hint-text-color);
  line-height: var(--line-height-none);
}
